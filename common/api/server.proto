syntax = "proto3";

package common.grpc.server;

option go_package = "common/grpc/server";

message RegisterRequest {
    string email = 1;
    bytes  hash = 2;
}

message RegisterResponse {
}

message LoginRequest {
    string email = 1;
    bytes  hash = 2;
    string email_code = 3;
}

message LoginResponse {
    string token = 1;
}

enum IType {
    ITYPE_UNKNOWN = 0;
    PASSWORD = 1;
    CARD = 2;
    TEXT = 3;
    BINARY = 4;
    BINARY_LARGE = 5;
}

message VaultItem {
    string id   = 1;
    string name = 2;
    IType itype = 3;
    bytes value = 4;
    int64 server_updated_at = 5;
    bool is_deleted = 6;
}

message ListVaultItemsRequest {
    int64 since = 1;
}

message ListVaultItemsResponse {
    repeated VaultItem items = 1;
}

message SetVaultItemRequest {
    VaultItem item = 1;
}

message SetVaultItemResponse {
    int64 server_updated_at = 1;
}

message GetFileDownloadURLRequest {
    string id = 1;
}

message GetFileDownloadURLResponse {
    string upload_id = 1;
    repeated string urls = 2;
}

message GetFileUploadURLRequest {
    string id = 1;
    int64 size = 2;
}

message GetFileUploadURLResponse {
    string upload_id = 1;
    repeated string urls = 2;
}

message CompleteFileUploadRequest {
    bool is_successful = 1;
    repeated string etags = 2;
    string id = 3;
    string upload_id = 4;
}

message CompleteFileUploadResponse {
}

service GophKeeperServer {
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc ListVaultItems(ListVaultItemsRequest) returns (ListVaultItemsResponse);
    rpc SetVaultItem(SetVaultItemRequest) returns (SetVaultItemResponse);
    rpc GetFileDownloadURL(GetFileDownloadURLRequest) returns (GetFileDownloadURLResponse);
    rpc GetFileUploadURL(GetFileUploadURLRequest) returns (GetFileUploadURLResponse);
    rpc CompleteFileUpload(CompleteFileUploadRequest) returns (CompleteFileUploadResponse);
}